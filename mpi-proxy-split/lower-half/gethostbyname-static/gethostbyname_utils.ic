/* Copyright 2021 Gene Cooperman (gene@ccs.neu.edu)
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include <unistd.h>

int readall(int fd, void *buf, size_t count) {
  char *buf2 = buf;
  while (count > 0) {
    int rc = read(fd, buf2, count);
    if (rc == -1 && (errno == EINTR || errno == EAGAIN)) {
      continue;
    }
    if (rc <= 0) {
      return -1; // zero means early EOF; -1 means error
    }
    buf2 += rc;
    count -= rc;
  }
  return buf2 - (char *)buf;
}

int writeall(int fd, const void *buf, size_t count) {
  char *buf2 = (char *)buf;
  while (count > 0) {
    int rc = write(fd, buf2, count);
    if (rc == -1 && (errno == EINTR || errno == EAGAIN)) {
      continue;
    }
    if (rc <= 0) {
      return -1; // zero means early EOF; -1 means error
    }
    buf2 += rc;
    count -= rc;
  }
  return buf2 - (char *)buf;
}
